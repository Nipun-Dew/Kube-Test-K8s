name: Deploy to Kubernetes

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

        # Step2: Apply the Kubernetes configurations
      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Navigate to the project directory
            cd /home/ec2-user/Kube-Test-K8s || exit 1
            
            # Pull latest changes from git
            git pull origin master
            
            # Create/update Kubernetes Secret
            kubectl create secret generic lugx-secret \
            --from-literal=CLICKHOUSE_ENDPOINT="${{ secrets.CLICKHOUSE_ENDPOINT }}" \
            --from-literal=CLICKHOUSE_USERNAME="${{ secrets.CLICKHOUSE_USERNAME }}" \
            --from-literal=CLICKHOUSE_PASSWORD="${{ secrets.CLICKHOUSE_PASSWORD }}" \
            --from-literal=GAMES_DB_URL="${{ secrets.GAMES_DB_URL }}" \
            --from-literal=ORDERS_DB_URL="${{ secrets.ORDERS_DB_URL }}" \
            --from-literal=DB_USERNAME="${{ secrets.DB_USERNAME }}" \
            --from-literal=DB_PASSWORD="${{ secrets.DB_PASSWORD }}" \
            --dry-run=client -o yaml | kubectl apply -f - || exit 1
            
            # Apply Kubernetes configurations
            kubectl apply -f deployment-analytics.yml
            kubectl apply -f deployment-lugx-games.yml
            kubectl apply -f deployment-lugx-orders.yml
            kubectl apply -f deployment-lugx-web.yml
            kubectl apply -f service-analytics.yml
            kubectl apply -f service-lugx-games.yml
            kubectl apply -f service-lugx-orders.yml
            kubectl apply -f service-lugx-web.yml
            kubectl apply -f lugx-ingress.yml
            
            # Check deployment status
            kubectl get deployments
            kubectl get services
            kubectl get ingress
